From bdd27af6696f24c9762cfae6dd00ad1ff2bd036a Mon Sep 17 00:00:00 2001
From: KOLANICH <KOLANICH@users.noreply.github.com>
Date: Mon, 7 Oct 2019 19:05:53 +0300
Subject: [PATCH] Added creation of packages

---
 CMakeLists.txt                            | 83 ++++++++++++++++++++---
 CPack.libdnf.description.txt              |  1 +
 bindings/python/CMakeLists.txt            | 57 +++++++++-------
 libdnf/CMakeLists.txt                     | 37 ++++++++--
 libdnf/conf/CMakeLists.txt                |  2 +-
 libdnf/config.h                           | 26 +++++++
 libdnf/plugin/CMakeLists.txt              |  2 +-
 libdnf/utils/CMakeLists.txt               |  2 +-
 python/hawkey/CMakeLists.txt              | 25 +++++--
 python/hawkey/tests/module/CMakeLists.txt |  4 +-
 10 files changed, 187 insertions(+), 52 deletions(-)
 create mode 100644 CPack.libdnf.description.txt
 create mode 100644 libdnf/config.h

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 834eea0f6..597eaa6ac 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -2,6 +2,15 @@
 message("Running CMake on libdnf...")
 project(libdnf C CXX)
 
+macro(pass_through_cpack_vars)
+	get_cmake_property(cpackVarsToPassthrough VARIABLES)
+	foreach(varName ${cpackVarsToPassthrough})
+		if(varName MATCHES "^CPACK_")
+			set("${varName}" "${${varName}}" PARENT_SCOPE)
+		endif()
+	endforeach()
+endmacro()
+
 
 # cmake requirements and policies
 cmake_minimum_required(VERSION 2.8.5)
@@ -31,6 +40,7 @@ option(WITH_GTKDOC "Enables libdnf GTK-Doc HTML documentation" ON)
 option(WITH_HTML "Enables hawkey HTML generation" ON)
 option(WITH_MAN "Enables hawkey man page generation" ON)
 option(WITH_ZCHUNK "Build with zchunk support" ON)
+option(WITH_TESTS "Build tests" ON)
 option(ENABLE_RHSM_SUPPORT "Build with Red Hat Subscription Manager support?" OFF)
 option(ENABLE_SOLV_URPMREORDER "Build with support for URPM-like solution reordering?" OFF)
 
@@ -46,12 +56,15 @@ endif()
 
 # build dependencies
 find_package(Gpgme REQUIRED)
-find_package(LibSolv 0.6.30 REQUIRED COMPONENTS ext)
+pkg_check_modules(LibSolv REQUIRED libsolv REQUIRED)
+pkg_check_modules(LibSolvExt REQUIRED libsolvext REQUIRED)
 find_package(OpenSSL REQUIRED)
 
 
 # build dependencies via pkg-config
-pkg_check_modules(CHECK REQUIRED check)
+if(WITH_TESTS)
+    pkg_check_modules(CHECK REQUIRED check)
+endif()
 pkg_check_modules(GLIB REQUIRED gio-unix-2.0>=2.46.0)
 include_directories(${GLIB_INCLUDE_DIRS})
 pkg_check_modules(JSONC REQUIRED json-c)
@@ -60,7 +73,7 @@ pkg_check_modules(LIBMODULEMD REQUIRED modulemd)
 pkg_check_modules(REPO REQUIRED librepo>=0.11.0)
 include_directories(${REPO_INCLUDE_DIRS})
 link_directories(${REPO_LIBRARY_DIRS})
-pkg_check_modules(RPM REQUIRED rpm>=4.11.0)
+pkg_check_modules(RPM REQUIRED rpm>=4.15.0)
 pkg_check_modules(SMARTCOLS REQUIRED smartcols)
 pkg_check_modules(SQLite3 REQUIRED sqlite3)
 
@@ -144,11 +157,62 @@ if(ENABLE_SOLV_URPMREORDER)
 endif()
 
 
+set(CPACK_PACKAGE_NAME libdnf)
+set(CPACK_PACKAGE_VERSION_MAJOR "${LIBDNF_MAJOR_VERSION}")
+set(CPACK_PACKAGE_VERSION_MINOR "${LIBDNF_MINOR_VERSION}")
+set(CPACK_PACKAGE_VERSION_PATCH "${LIBDNF_PATCH_VERSION}")
+set(CPACK_PACKAGE_VENDOR "Red Hat")
+set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Software management library.")
+set(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_SOURCE_DIR}/CPack.libdnf.description.txt")
+set(CPACK_PACKAGE_HOMEPAGE_URL "https://github.com/rpm-software-management/libdnf")
+set(CPACK_PACKAGE_CONTACT "https://github.com/rpm-software-management/libdnf")
+set(CPACK_PACKAGE_CHECKSUM "SHA512")
+set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/COPYING")
+set(CPACK_GENERATOR "DEB")
+option(CPACK_RPM_COMPONENT_INSTALL"Split into multiple rpm packages" ON)
+option(CPACK_DEB_COMPONENT_INSTALL "Split into multiple rpm packages" ON)
+set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME "locales") # gettext_create_translations has a bug: we cannot specify the package where to put the results
+set(CPACK_DEBIAN_LOCALES_PACKAGE_NAME "libdnf-locales")
+
+
+message(STATUS "GLIB_VERSION ${GLIB_VERSION}")
+string(REPLACE "." ";" GLIB2_VERSION_PARSED "${GLIB_VERSION}")
+list(GET GLIB2_VERSION_PARSED 0 GLIB_VERSION_MAJOR)
+list(GET GLIB2_VERSION_PARSED 1 GLIB_VERSION_MINOR)
+
+string(REPLACE "." ";" GPGME_VERSION_PARSED "${GPGME_VERSION}")
+list(GET GPGME_VERSION_PARSED 0 GPGME_VERSION_MAJOR)
+
+string(REPLACE "." ";" LIBCRYPTO_VERSION_PARSED "${OPENSSL_VERSION}")
+list(GET LIBCRYPTO_VERSION_PARSED 0 LIBCRYPTO_VERSION_MAJOR)
+list(GET LIBCRYPTO_VERSION_PARSED 1 LIBCRYPTO_VERSION_MINOR)
+
+string(REPLACE "." ";" LibSolv_VERSION_PARSED "${LibSolv_VERSION}")
+list(GET LibSolv_VERSION_PARSED 0 LibSolv_VERSION_MAJOR)
+list(GET LibSolv_VERSION_PARSED 1 LibSolv_VERSION_MINOR)
+
+string(REPLACE "." ";" LibSolvExt_VERSION_PARSED "${LibSolvExt_VERSION}")
+list(GET LibSolvExt_VERSION_PARSED 0 LibSolvExt_VERSION_MAJOR)
+list(GET LibSolvExt_VERSION_PARSED 1 LibSolvExt_VERSION_MINOR)
+
+string(REPLACE "." ";" SQLite3_VERSION_PARSED "${SQLite3_VERSION}")
+list(GET SQLite3_VERSION_PARSED 0 SQLite3_VERSION_MAJOR)
+
+string(REPLACE "." ";" LIBMODULEMD_VERSION_PARSED "${LIBMODULEMD_VERSION}")
+list(GET LIBMODULEMD_VERSION_PARSED 0 LIBMODULEMD_VERSION_MAJOR)
+
+
+string(REPLACE "." ";" SMARTCOLS_VERSION_PARSED "${SMARTCOLS_VERSION}")
+list(GET SMARTCOLS_VERSION_PARSED 0 SMARTCOLS_VERSION_MAJOR)
+list(GET SMARTCOLS_VERSION_PARSED 1 SMARTCOLS_VERSION_MINOR)
+
+
 # build binaries
 add_subdirectory(libdnf)
 if(WITH_BINDINGS)
     # add_subdirectory(bindings/perl)
     add_subdirectory(bindings/python)
+    add_subdirectory(python/hawkey)
 endif()
 
 
@@ -162,10 +226,11 @@ if(WITH_BINDINGS)
     add_subdirectory(docs/hawkey)
 endif()
 
-
-# build tests
-enable_testing()
-add_subdirectory(tests)
-if(WITH_BINDINGS)
-    add_subdirectory(python/hawkey)
+if(WITH_TESTS)
+    # build tests
+    enable_testing()
+    add_subdirectory(tests)
 endif()
+
+
+include(CPack)
diff --git a/CPack.libdnf.description.txt b/CPack.libdnf.description.txt
new file mode 100644
index 000000000..debbb37bc
--- /dev/null
+++ b/CPack.libdnf.description.txt
@@ -0,0 +1 @@
+This library provides a high level package-manager. It's core library of dnf, PackageKit and rpm-ostree. It's replacement for deprecated hawkey library which it contains inside and uses librepo under the hood.
diff --git a/bindings/python/CMakeLists.txt b/bindings/python/CMakeLists.txt
index 9e3abfec8..8c0e01798 100644
--- a/bindings/python/CMakeLists.txt
+++ b/bindings/python/CMakeLists.txt
@@ -1,13 +1,12 @@
-find_package(PythonInstDir)
+find_package(Python COMPONENTS Interpreter Development)
 find_package(SWIG REQUIRED)
 include(UseSWIG)
 
 message(STATUS "Building for python${PYTHON_VERSION_MAJOR}")
 
-find_package(PythonInstDir)
 
 include_directories(${CMAKE_SOURCE_DIR})
-include_directories(${PYTHON_INCLUDE_PATH})
+include_directories(${Python_INCLUDE_DIRS})
 include(UseSWIG)
 
 if(CMAKE_SIZEOF_VOID_P EQUAL 8)
@@ -22,56 +21,64 @@ set(COMMON_TYPES_NAME "common_types")
 set_source_files_properties(../swig/${COMMON_TYPES_NAME}.i PROPERTIES CPLUSPLUS ON)
 swig_add_module(${COMMON_TYPES_NAME} python ../swig/${COMMON_TYPES_NAME}.i)
 swig_link_libraries(${COMMON_TYPES_NAME} libdnf)
-swig_link_libraries(${COMMON_TYPES_NAME} ${PYTHON_LIBRARY})
-install(TARGETS _${COMMON_TYPES_NAME} LIBRARY DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
-install(FILES ${CMAKE_BINARY_DIR}/bindings/python/${COMMON_TYPES_NAME}.py DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
+swig_link_libraries(${COMMON_TYPES_NAME} ${Python_LIBRARIES})
+install(TARGETS _${COMMON_TYPES_NAME} LIBRARY DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
+install(FILES ${CMAKE_BINARY_DIR}/bindings/python/${COMMON_TYPES_NAME}.py DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
 
 set(CONFIG_NAME "conf")
 set_source_files_properties(../swig/${CONFIG_NAME}.i PROPERTIES CPLUSPLUS ON)
 swig_add_module(${CONFIG_NAME} python ../swig/${CONFIG_NAME}.i)
 swig_link_libraries(${CONFIG_NAME} libdnf)
-swig_link_libraries(${CONFIG_NAME} ${PYTHON_LIBRARY})
-install(TARGETS _${CONFIG_NAME} LIBRARY DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
-install(FILES ${CMAKE_BINARY_DIR}/bindings/python/${CONFIG_NAME}.py DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
+swig_link_libraries(${CONFIG_NAME} ${Python_LIBRARIES})
+install(TARGETS _${CONFIG_NAME} LIBRARY DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
+install(FILES ${CMAKE_BINARY_DIR}/bindings/python/${CONFIG_NAME}.py DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
 
 set(REPO_NAME "repo")
 set_source_files_properties(../swig/${REPO_NAME}.i PROPERTIES CPLUSPLUS ON)
 swig_add_module(${REPO_NAME} python ../swig/${REPO_NAME}.i)
 swig_link_libraries(${REPO_NAME} libdnf)
-swig_link_libraries(${REPO_NAME} ${PYTHON_LIBRARY})
-install(TARGETS _${REPO_NAME} LIBRARY DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
-install(FILES ${CMAKE_BINARY_DIR}/bindings/python/${REPO_NAME}.py DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
+swig_link_libraries(${REPO_NAME} ${Python_LIBRARIES})
+install(TARGETS _${REPO_NAME} LIBRARY DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
+install(FILES ${CMAKE_BINARY_DIR}/bindings/python/${REPO_NAME}.py DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
 
 set(SMARTCOLS_NAME "smartcols")
 set_source_files_properties(../swig/${SMARTCOLS_NAME}.i PROPERTIES CPLUSPLUS ON)
 swig_add_module(${SMARTCOLS_NAME} python ../swig/${SMARTCOLS_NAME}.i)
 swig_link_libraries(${SMARTCOLS_NAME} libdnf)
-swig_link_libraries(${SMARTCOLS_NAME} ${PYTHON_LIBRARY})
-install(TARGETS _${SMARTCOLS_NAME} DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
-install(FILES ${CMAKE_BINARY_DIR}/bindings/python/${SMARTCOLS_NAME}.py DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
+swig_link_libraries(${SMARTCOLS_NAME} ${Python_LIBRARIES})
+install(TARGETS _${SMARTCOLS_NAME} DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
+install(FILES ${CMAKE_BINARY_DIR}/bindings/python/${SMARTCOLS_NAME}.py DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
 
 set_source_files_properties(../swig/utils.i PROPERTIES CPLUSPLUS ON)
 swig_add_module(utils python ../swig/utils.i)
 swig_link_libraries(utils libdnf)
-swig_link_libraries(utils ${PYTHON_LIBRARY})
+swig_link_libraries(utils ${Python_LIBRARIES})
 swig_link_libraries(utils ${SQLite3_LIBRARIES})
-install(TARGETS _utils DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
-install(FILES ${CMAKE_BINARY_DIR}/bindings/python/utils.py DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
+install(TARGETS _utils DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
+install(FILES ${CMAKE_BINARY_DIR}/bindings/python/utils.py DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
 
 set_source_files_properties(../swig/transaction.i PROPERTIES CPLUSPLUS ON)
 swig_add_module(transaction python ../swig/transaction.i)
 swig_link_libraries(transaction libdnf)
-swig_link_libraries(transaction ${PYTHON_LIBRARY})
-install(TARGETS _transaction DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
-install(FILES ${CMAKE_BINARY_DIR}/bindings/python/transaction.py DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
+swig_link_libraries(transaction ${Python_LIBRARIES})
+install(TARGETS _transaction DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
+install(FILES ${CMAKE_BINARY_DIR}/bindings/python/transaction.py DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
 
 set(MODULE_NAME "module")
 set_source_files_properties(../swig/${MODULE_NAME}.i PROPERTIES CPLUSPLUS ON)
 swig_add_module(${MODULE_NAME} python ../swig/${MODULE_NAME}.i)
 swig_link_libraries(${MODULE_NAME} libdnf)
-swig_link_libraries(${MODULE_NAME} ${PYTHON_LIBRARY})
-install(TARGETS _${MODULE_NAME} LIBRARY DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
-install(FILES ${CMAKE_BINARY_DIR}/bindings/python/${MODULE_NAME}.py DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
+swig_link_libraries(${MODULE_NAME} ${Python_LIBRARIES})
+install(TARGETS _${MODULE_NAME} LIBRARY DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
+install(FILES ${CMAKE_BINARY_DIR}/bindings/python/${MODULE_NAME}.py DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
 
 configure_file(__init__.py ${CMAKE_CURRENT_BINARY_DIR}/__init__.py COPYONLY)
-install(FILES __init__.py DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
+install(FILES __init__.py DESTINATION ${Python_STDARCH}/libdnf COMPONENT "python${PYTHON_VERSION_MAJOR}")
+
+if(${PYTHON_VERSION_MAJOR} GREATER_EQUAL "3")
+	set("CPACK_DEBIAN_PYTHON${PYTHON_VERSION_MAJOR}_PACKAGE_NAME" "python${PYTHON_VERSION_MAJOR}-libdnf" PARENT_SCOPE)
+else()
+	set("CPACK_DEBIAN_PYTHON${PYTHON_VERSION_MAJOR}_PACKAGE_NAME" "python-libdnf" PARENT_SCOPE)
+endif()
+
+set("CPACK_DEBIAN_PYTHON${PYTHON_VERSION_MAJOR}_DEPENDS" "libpython${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR} (>=${PYTHON_VERSION_STRING}~), python${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR} (>=${PYTHON_VERSION_STRING}~), ${CPACK_DEBIAN_LIB_PACKAGE_NAME}" PARENT_SCOPE)
\ No newline at end of file
diff --git a/libdnf/CMakeLists.txt b/libdnf/CMakeLists.txt
index dcee38b1c..d4a1a059f 100644
--- a/libdnf/CMakeLists.txt
+++ b/libdnf/CMakeLists.txt
@@ -62,8 +62,8 @@ target_link_libraries(libdnf
     ${GLIB_GOBJECT_LIBRARIES}
     ${GLIB_GIO_LIBRARIES}
     ${GLIB_GIO_UNIX_LIBRARIES}
-    ${LIBSOLV_LIBRARY}
-    ${LIBSOLV_EXT_LIBRARY}
+    ${LibSolv_LIBRARIES}
+    ${LibSolvExt_LIBRARIES}
     ${OPENSSL_CRYPTO_LIBRARY}
     ${RPM_LIBRARIES}
     ${SCOLS_LIBRARIES}
@@ -129,8 +129,33 @@ message(STATUS "Building for python${PYTHON_VERSION_MAJOR}")
 
 install(FILES ${CMAKE_CURRENT_BINARY_DIR}/libdnf.pc
     DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR}/pkgconfig
+    COMPONENT "dev"
 )
-install(FILES ${LIBDNF_headers} DESTINATION include/libdnf)
-install(FILES ${LIBHAWKEY_headers} DESTINATION include/libdnf)
-install(TARGETS libdnf LIBRARY DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR})
-install(FILES "README.plugins" DESTINATION "${CMAKE_INSTALL_FULL_LIBDIR}/libdnf/plugins" RENAME "README")
+install(FILES ${LIBDNF_headers} DESTINATION include/libdnf COMPONENT "dev")
+install(FILES ${LIBHAWKEY_headers} DESTINATION include/libdnf COMPONENT "libhawkey_dev")
+install(TARGETS libdnf LIBRARY DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR} COMPONENT "lib")
+install(FILES "README.plugins" DESTINATION "${CMAKE_INSTALL_FULL_LIBDIR}/libdnf/plugins" RENAME "README" COMPONENT "lib")
+
+set(CPACK_DEBIAN_LIB_PACKAGE_NAME "libdnf")
+set(CPACK_DEBIAN_DEV_PACKAGE_NAME "${CPACK_DEBIAN_LIB_PACKAGE_NAME}-dev")
+set(CPACK_DEBIAN_LIBHAWKEY_DEV_PACKAGE_NAME "libhawkey-dev")
+
+set(CPACK_DEBIAN_LIB_PACKAGE_DEPENDS "libglib${GLIB_VERSION_MAJOR}.0-0 (>=${GLIB_VERSION}~);libgpgme${GPGME_VERSION_MAJOR}1 (>=${GPGME_VERSION}~);libssl${LIBCRYPTO_VERSION_MAJOR}.${LIBCRYPTO_VERSION_MINOR} (>=${OPENSSL_VERSION}~);libjson-c4 (>=${JSONC_VERSION}~);librpm8 (>=${RPM_VERSION}~);librepo (>=${REPO_VERSION});libsolv${LibSolv_VERSION_MAJOR} (>=${LibSolv_VERSION}~);libsolvext${LibSolvExt_VERSION_MAJOR} (>=${LibSolvExt_VERSION}~);libsqlite${SQLite3_VERSION_MAJOR}-0 (>=${SQLite3_VERSION}~);libmodulemd${LIBMODULEMD_VERSION_MAJOR} (>=${LIBMODULEMD_VERSION}~);libsmartcols1 (>=${SMARTCOLS_VERSION_MAJOR}.${SMARTCOLS_VERSION_MINOR}~)")
+
+set(CPACK_DEBIAN_LIBHAWKEY_DEV_DEPENDS "${CPACK_DEBIAN_DEV_PACKAGE_NAME}")
+
+set(CPACK_DEBIAN_DEV_PACKAGE_DEPENDS "libglib${GLIB_VERSION_MAJOR}.0-dev (>=${GLIB_VERSION}~);libsolv${LibSolv_VERSION_MAJOR}-dev (>=${LibSolv_VERSION}~);libsolvext${LibSolvExt_VERSION_MAJOR}-dev (>=${LibSolvExt_VERSION}~);librpm-dev (>=${RPM_VERSION}~);${CPACK_DEBIAN_LIB_PACKAGE_NAME}")
+
+list(JOIN CPACK_DEBIAN_DEV_PACKAGE_DEPENDS ", " CPACK_DEBIAN_DEV_PACKAGE_DEPENDS)
+
+if(ENABLE_RHSM_SUPPORT)
+	list(APPEND CPACK_DEBIAN_LIB_PACKAGE_DEPENDS "librhsm (>=${RHSM_VERSION}~)")
+endif()
+
+if(WITH_ZCHUNK)
+	list(APPEND CPACK_DEBIAN_LIB_PACKAGE_DEPENDS "libzchunk (>=${ZCHUNKLIB_VERSION}~)")
+endif()
+
+list(JOIN CPACK_DEBIAN_LIB_PACKAGE_DEPENDS ", " CPACK_DEBIAN_LIB_PACKAGE_DEPENDS)
+
+pass_through_cpack_vars()
\ No newline at end of file
diff --git a/libdnf/conf/CMakeLists.txt b/libdnf/conf/CMakeLists.txt
index 049954ab3..2e644ba3f 100644
--- a/libdnf/conf/CMakeLists.txt
+++ b/libdnf/conf/CMakeLists.txt
@@ -31,4 +31,4 @@ set(CONF_PUBLIC_HEADERS
     ${CMAKE_CURRENT_SOURCE_DIR}/ConfigParser.hpp
 )
 
-install(FILES ${CONF_PUBLIC_HEADERS} DESTINATION include/libdnf/conf)
+install(FILES ${CONF_PUBLIC_HEADERS} DESTINATION include/libdnf/conf COMPONENT "lib")
diff --git a/libdnf/config.h b/libdnf/config.h
new file mode 100644
index 000000000..f6b8f498f
--- /dev/null
+++ b/libdnf/config.h
@@ -0,0 +1,26 @@
+/*
+ * Copyright (C) 2018 Red Hat, Inc.
+ *
+ * Licensed under the GNU Lesser General Public License Version 2.1
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+#ifndef _LIBDNF_CONFIG_H_
+#define _LIBDNF_CONFIG_H_
+
+#define DEFAULT_PLUGINS_DIRECTORY "/usr/local/lib/libdnf/plugins/"
+
+#endif // _LIBDNF_CONFIG_H_
diff --git a/libdnf/plugin/CMakeLists.txt b/libdnf/plugin/CMakeLists.txt
index 05d00ec21..28429d1a3 100644
--- a/libdnf/plugin/CMakeLists.txt
+++ b/libdnf/plugin/CMakeLists.txt
@@ -7,4 +7,4 @@ set(PLUGIN_PUBLIC_HEADERS
     ${CMAKE_CURRENT_SOURCE_DIR}/plugin.h
 )
 
-install(FILES ${PLUGIN_PUBLIC_HEADERS} DESTINATION include/libdnf/plugin)
+install(FILES ${PLUGIN_PUBLIC_HEADERS} DESTINATION include/libdnf/plugin COMPONENT "dev")
diff --git a/libdnf/utils/CMakeLists.txt b/libdnf/utils/CMakeLists.txt
index db19d4d7c..3f27118b1 100644
--- a/libdnf/utils/CMakeLists.txt
+++ b/libdnf/utils/CMakeLists.txt
@@ -21,4 +21,4 @@ set(UTILS_PUBLIC_HEADERS
     ${CMAKE_CURRENT_SOURCE_DIR}/PreserveOrderMap.hpp
 )
 
-install(FILES ${UTILS_PUBLIC_HEADERS} DESTINATION include/libdnf/utils)
+install(FILES ${UTILS_PUBLIC_HEADERS} DESTINATION include/libdnf/utils COMPONENT "dev")
diff --git a/python/hawkey/CMakeLists.txt b/python/hawkey/CMakeLists.txt
index d9645346b..7839e30aa 100644
--- a/python/hawkey/CMakeLists.txt
+++ b/python/hawkey/CMakeLists.txt
@@ -6,11 +6,11 @@ else()
     set(HAWKEY_MODULE_NAME "_hawkey")
 endif()
 
-find_package(PythonInstDir)
+find_package (Python COMPONENTS Interpreter Development)
 include_directories(${PYTHON_INCLUDE_PATH})
 include_directories("${CMAKE_SOURCE_DIR}/libdnf")
 
-message(STATUS "Python install dir is ${PYTHON_INSTALL_DIR}")
+message(STATUS "Python install dir is ${Python_STDARCH}")
 
 set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fno-strict-aliasing")
 set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -fno-strict-aliasing")
@@ -44,10 +44,21 @@ add_library(_hawkeymodule SHARED ${hawkeymodule_SRCS})
 set_target_properties(_hawkeymodule PROPERTIES PREFIX "")
 set_target_properties(_hawkeymodule PROPERTIES OUTPUT_NAME ${HAWKEY_MODULE_NAME})
 set_target_properties(_hawkeymodule PROPERTIES LIBRARY_OUTPUT_DIRECTORY "./hawkey")
-target_link_libraries(_hawkeymodule libdnf ${SOLV_LIBRARY} ${SOLVEXT_LIBRARY})
-target_link_libraries(_hawkeymodule ${PYTHON_LIBRARY})
+target_link_libraries(_hawkeymodule libdnf ${LibSolv_LIBRARIES} ${LibSolvExt_LIBRARIES})
+target_link_libraries(_hawkeymodule ${Python_LIBRARIES})
 
-install(FILES __init__.py DESTINATION ${PYTHON_INSTALL_DIR}/hawkey)
-install(TARGETS _hawkeymodule LIBRARY DESTINATION ${PYTHON_INSTALL_DIR}/hawkey)
+install(FILES __init__.py DESTINATION ${Python_STDARCH}/hawkey COMPONENT "python-hawkey" COMPONENT "python_hawkey")
+install(TARGETS _hawkeymodule LIBRARY DESTINATION ${Python_STDARCH}/hawkey  COMPONENT "python_hawkey")
 
-add_subdirectory(tests)
+if(WITH_TESTS)
+    add_subdirectory(tests)
+endif()
+
+
+if(${PYTHON_VERSION_MAJOR} GREATER_EQUAL "3")
+	set(CPACK_DEBIAN_PYTHON_HAWKEY_PACKAGE_NAME "python${PYTHON_VERSION_MAJOR}-hawkey" PARENT_SCOPE)
+else()
+	set(CPACK_DEBIAN_PYTHON_HAWKEY_PACKAGE_NAME "python-hawkey" PARENT_SCOPE)
+endif()
+
+set("CPACK_DEBIAN_PYTHON_HAWKEY_PACKAGE_DEPENDS" "libpython${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR} (>=${PYTHON_VERSION_STRING}~), python${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR} (>=${PYTHON_VERSION_STRING}~), ${CPACK_DEBIAN_LIB_PACKAGE_NAME}" PARENT_SCOPE)
\ No newline at end of file
diff --git a/python/hawkey/tests/module/CMakeLists.txt b/python/hawkey/tests/module/CMakeLists.txt
index 6446afe23..58cf69bcd 100644
--- a/python/hawkey/tests/module/CMakeLists.txt
+++ b/python/hawkey/tests/module/CMakeLists.txt
@@ -34,5 +34,5 @@ add_custom_command(TARGET testmodule
     COMMAND cp $<TARGET_FILE:testmodule> ${TMODULE_TARGET}
 )
 
-install(FILES __init__.py DESTINATION ${PYTHON_INSTALL_DIR}/hawkey/test)
-install(TARGETS testmodule LIBRARY DESTINATION ${PYTHON_INSTALL_DIR}/hawkey/test)
+install(FILES __init__.py DESTINATION ${PYTHON_INSTALL_DIR}/hawkey/test COMPONENT "hawkey_test")
+install(TARGETS testmodule LIBRARY DESTINATION ${PYTHON_INSTALL_DIR}/hawkey/test COMPONENT "hawkey_test")
-- 
2.20.1

